<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.javaboy.vhr.mapper.EmployeeTrainMapper" >
  <resultMap id="BaseResultMap" type="org.javaboy.vhr.model.EmployeeTrain" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="eid" property="eid" jdbcType="INTEGER" />
    <result column="trainDate" property="trainDate" jdbcType="DATE" />
    <result column="trainContent" property="trainContent" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, eid, trainDate, trainContent, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employeetrain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employeetrain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.javaboy.vhr.model.EmployeeTrain" >
    insert into employeetrain (id, eid, trainDate, 
      trainContent, remark)
    values (#{id,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{trainDate,jdbcType=DATE},
      #{trainContent,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.javaboy.vhr.model.EmployeeTrain" useGeneratedKeys="true"
          keyProperty="id">
    insert into employeetrain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="eid != null" >
        eid,
      </if>
      <if test="trainDate != null" >
        trainDate,
      </if>
      <if test="trainContent != null" >
        trainContent,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="trainDate != null" >
        #{trainDate,jdbcType=DATE},
      </if>
      <if test="trainContent != null" >
        #{trainContent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.javaboy.vhr.model.EmployeeTrain" >
    update employeetrain
    <set >
      <if test="eid != null" >
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="trainDate != null" >
        trainDate = #{trainDate,jdbcType=DATE},
      </if>
      <if test="trainContent != null" >
        trainContent = #{trainContent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.javaboy.vhr.model.EmployeeTrain" >
    update employeetrain
    set eid = #{eid,jdbcType=INTEGER},
      trainDate = #{trainDate,jdbcType=DATE},
      trainContent = #{trainContent,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getEmployeeTrainByPage" resultMap="BaseResultMap">
    select * from employeetrain et where 1=1
    <if test="employeeTrain.trainContent !=null">
      and et.trainContent like concat('%', #{employeeTrain.trainContent}, '%')
    </if>
    <if test="beginDateScope !=null">
      and et.trainDate between #{beginDateScope[0]} and #{beginDateScope[1]}
    </if>
    <if test="page !=null and size!=null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="getTotal" resultType="java.lang.Long">
    select count(*) from employeetrain et
    <where>
      <if test="employeeTrain!=null">
        <if test="employeeTrain.eid !=null">
          and et.eid #{employeeTrain.eid}
        </if>
        <if test="employeeTrain.trainContent !=null">
          and et.trainContent like concat('%', #{employeeTrain.trainContent}, '%')
        </if>
      </if>
      <if test="beginDateScope !=null">
        and et.trainDate between #{beginDateScope[0]} and #{beginDateScope[1]}
      </if>
    </where>
  </select>
  <select id="getEmployeeTrainById" resultMap="BaseResultMap">
    select * from employeetrain et where et.`id`=#{id}
  </select>
</mapper>